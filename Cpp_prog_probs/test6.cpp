// 给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
// 不要使用额外的数组空间，你必须在 原地 修改输入数组 并在使用 O(1) 额外空间的条件下完成。
// 给定数组 nums = [1,1,2]，函数应该返回新的长度 2，并且原数组 nums 的前两个元素被修改为 1, 2。
// 给定 nums = [0, 0, 1, 1, 1, 2, 2, 3, 3, 4]
//函数应该返回新的长度 5，并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。

# include <iostream>
# include <vector>
# include "main.h"
using namespace std;

int test6()
{
    vector<int> nums = { 0,0,1,1,1,2,2,3,3,4 };
    if (nums.empty() or nums.size() == 1) return nums.size();
    int start = nums[0], j = 1;
    for (int i = 1; i < nums.size(); ++i)
    {
        if (nums[i] != start)
        {
            nums[j] = nums[i];
            start = nums[i];
            j++;
        }
    }
    cout << j << endl;;

	return 0;
}